version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: family_chores
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d family_chores"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: api
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/family_chores
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=3001
    volumes:
      - ./api:/app/api
      - /app/node_modules
    command: npm run api:dev

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      - API_BASE_URL=http://api:3001/api
      - PORT=3000
    volumes:
      - ./app:/app/app
      - ./public:/app/public
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  shared_dist:
